apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.sdxxtop.zjlguardian"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

//        ndk {
//            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
////            abiFilters "armeabi", "armeabi-v7a", "x86"//, "arm64-v8a", "x86", "arm64-v8a", "x86_64"
//            abiFilters "armeabi-v7a"
////            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    //360打包时需要加入这个，否则manifest文件中有警告会停止打包
    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.noober.background:core:1.4.6'
    implementation "org.jetbrains.anko:anko:$anko_version"
    //ViewModel
    implementation "android.arch.lifecycle:extensions:" + rootProject.archLifecycleVersion
    implementation "android.arch.lifecycle:viewmodel:" + rootProject.archLifecycleVersion
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    kapt "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'


    //    # 必选，可兼容市面上绝大部分设备
    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-armv7a:2.5.5'
//    # 可选，用于兼容一些其他的CPU架构
    implementation 'com.github.dueeeke.dkplayer:dkplayer-armv5:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-arm64:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-x86:2.5.5'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-x86_64:2.5.5'
//    # 可选，里面包含StandardVideoController的实现
    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:2.5.5'
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    implementation 'com.github.ctiao:ndkbitmap-armv5:0.9.21'
    implementation 'com.github.ctiao:ndkbitmap-x86:0.9.21'
    implementation 'com.youth.banner:banner:1.4.10'

//    implementation rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    kapt rootProject.ext.dependencies["dagger-compiler"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    if (isNeedUserModule.toBoolean()) {
        implementation project(path: ':module_base')
    }

    implementation 'com.contrarywind:Android-PickerView:4.1.8'
    implementation project(path: ':faceplatform')
}
